{% extends 'base.html.twig' %}

{% block title %}Hello {{ controller_name }}!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="shadowed col-sm-12 col-md-10 offset-md-1 bs-jumbo p-5">
        <div class="container-fluid">
            <h1 class="bs-dark-blue-text text-center">Hello! Welcome to Bad Sally Software</h1>
            <hr>
            <p class="">My name is Michael Downing and I'm a newly minted software engineer. I have created this site as a place to showcase some of the projects I'm working on and hopefully share with you some interesting things I've come up with.</p>
            <p class="">One of my favorite things to do is pick up a new framework, language, or technique and see what I can do with it. Now that school is in the rear view mirror, I have a chance to devote some time to my pet project ideas. All of these projects will
            be open source and available on GitHub. Below is a list of things I have spent the last couple years wishing I would have time to get around to. I don't know in what order I will do these projects, and maybe I'll never get to some of them if I get
            a wonderul new job (fingers crossed), but at least it's a launching point.</p>
            
        </div>
    </div>
    <div class="aboutBox my-5 col-sm-12 col-md-8 offset-md-2 shadowed">
        <h6>Projects:</h6>
        <ul class="list-group">
            <li class="list-group-item">
                <img class="bs-project-icon" src="/images/php.png" /><strong>This Site</strong>
                <p>The first project will be this site itself. I will be building it using PHP because it is the most cost effective way to host a personal website, and I won't need the capabilities of a large .NET or NodeJS application. The website will have projects which will be divided into sections. Each section will have a short description, a longer discussion of challenges and things learned, and associated screenshots and code snippets.</p>
            </li>
            <li class="list-group-item">
                <img class="bs-project-icon" src="/images/cPlusPlus.png" /><strong>A Turn Based Battle Game Engine</strong>
                <p>I've long been a fan of JRPG games, and I think this would be wonderful project to learn a little more about graphics rendering. I would do this project in C++ and my goal would be to directly use OpenGL or DirectX (Maybe Vulcan?) to render a simple 2D game engine</p>
            </li>
            <li class="list-group-item">
                <img class="bs-project-icon" src="/images/cSharp.png" /><strong>A Repair Business Application</strong>
                <p>I spent many years working at a business that did repair of electronic barcode devices, and we never could find a piece of software that worked perfectly well with out workflow. I would like to build a database backed program using WPF to service this role.</p>
            </li>
            <li class="list-group-item">
                <img class="bs-project-icon" src="/images/javascript.png" /><strong>A random spin the wheel program</strong>
                <p>This is actually a program I have partially implemented. I made it for my friend's charity video game screen to select a random race and class in World of Warcraft for us to play for 24 hours. It worked ok, but I would like to refine it an offer an API so that anyone could add a fun Wheel of Fortune style spinner to their website as an easy plugin</p>
            </li>
            <li class="list-group-item">
                <img class="bs-project-icon" src="/images/python.png" /><strong>A really fun text-based adventure in Python</strong>
                <p>Python seems like a really cool language, I haven't had as much chance to play with it as I would like. I think a text-based adventure game would give me a great chance to play with the object oriented features of the language. In my experience, Python is also great at dealing with strings, so it seems like a natural fit for this kind of program.</p>
            </li>
        </ul>
    </div>
{% endblock %}
